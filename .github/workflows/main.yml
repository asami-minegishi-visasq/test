name: set-tag-and-switch-traffic
on:
  workflow_call:
    inputs:
      is_switch_traffic: 
        type: string
        required: false
      service_name: 
        type: string
        required: true
      app-version: 
        type: string
        required: true
      region: 
        type: string
        required: true
      environment: 
        type: string
        required: true
      project_id: 
        type: string
        required: true
      project_name: 
        type: string
        required: true
      revision_base: 
        type: string
        required: true
      slack_channel: 
        type: string
        required: true

jobs:
  set-tag:
    if: ${{ ! contains(github.event.head_commit.message, '[no switch]') }}
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.set_tag.outputs.tag_name }}
    steps:
      - name: debug
        run: |
          echo 'github.event_name: ' ${{ github.event_name }}
          echo 'github.ref_name: ' ${{ github.ref_name }}
          echo 'github.base_ref: ' ${{ github.base_ref }}
          echo 'inputs.is_switch_traffic: ' ${{ inputs.is_switch_traffic }}
          echo 'inputs.app-version: ' ${{ inputs.app-version }}
          echo 'inputs.region: ' ${{ inputs.region }}
          echo 'inputs.environment: ' ${{ inputs.environment }}
          echo 'inputs.project_id: ' ${{ inputs.project_id }}
          echo 'inputs.project_name: ' ${{ inputs.project_name }}
          echo 'inputs.revision_base: ' ${{ inputs.revision_base }}
          echo 'inputs.slack_channel: ' ${{ inputs.slack_channel }}
          cat $GITHUB_EVENT_PATH

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Tag List
        id: get_tag
        run: |
          latest_tag=$(git tag -l --sort=version:refname "${{ inputs.revision_base }}-${{ inputs.app_version }}*" | tail -n 1)
          release_number=$(echo $latest_tag | sed "s/${{ inputs.revision_base }}-${{ inputs.app_version }}-//" | awk '{print $0+1}')
          echo "release_number=${release_number}" >> $GITHUB_ENV
          
      - name: Create and Push New Tag
        id: set_tag
        run: |
          tag_name="${{ inputs.revision_base }}-${{ inputs.app_version }}-${{ env.release_number }}"
          git tag $tag_name
          git push origin $tag_name
          echo "tag_name=${tag_name}" >> $GITHUB_OUTPUT
          slack_message="動作確認できたらswitch-trafficしてください"
          if [[ '${{ inputs.is_switch_traffic }}' == 'false' ]] ; then
            slack_message="switch-trafficなし"
          fi
          echo $slack_message

  switch-traffic:
    if: ${{ github.event_name == 'push' || inputs.is_switch_traffic == true }}
    needs:
      - set-tag
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    concurrency:
      group: switch-traffic-${{ inputs.environment }}
      cancel-in-progress: true
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      services: ${{ steps.services_list.outputs.services }}
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/${{ inputs.project_id }}/locations/global/workloadIdentityPools/cloud-run-test/providers/github"
          service_account: "cloud-run-test@${{ inputs.project_name }}.iam.gserviceaccount.com"
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: List Cloud Run services
        id: services_list
        run: |
          services=$(gcloud run services list --region=${{ inputs.region }} --format="value(name)" --filter="metadata.name:${{ inputs.service_name }}*")
          echo 'services<<EOF' >> $GITHUB_OUTPUT
          echo ${services} >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Switch Traffic
        run: |
          for service in ${{ steps.services_list.outputs.services }}; do
            revision="${service}-${{ needs.set-tag.outputs.tag_name }}"
            gcloud run services update-traffic "$service" --region=${{ inputs.region }} --to-revisions $revision=100
            echo "Updated traffic for service $service to revision $revision"
          done

  cleanup-revision-tags:
    needs:
      - switch-traffic
    environment:
      name: wait-${{ inputs.environment }}
    concurrency:
      group: cleanup-${{ inputs.environment }}
      cancel-in-progress: true
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/${{ inputs.project_id }}/locations/global/workloadIdentityPools/cloud-run-test/providers/github"
          service_account: "cloud-run-test@${{ inputs.project_name }}.iam.gserviceaccount.com"
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Cleanup revision-tags
        run: |
          for service in ${{ needs.switch-traffic.outputs.services }}; do
            traffic=$(gcloud run services describe "$service" --region=${{ inputs.region }} --format="json(spec.traffic)")
            echo $traffic
            delete_tags=$(echo "$traffic" | jq -r '
              .spec.traffic
              | group_by(.revisionName)
              | map(select(
                  all(.percent == null) and all(.tag | startswith("pullrequest") and all(.tag | startswith("ready") | not)
                ))
              | map(.[0].tag)
              | join(",")
            ')
            echo "$delete_tags"
            # いらないリビジョンタグを消す
            gcloud run services update-traffic "$service" --region=${{ inputs.region }} --remove-tags="$delete_tags"
            # gcloud run services update-traffic "$service" --region=${{ env.REGION }} --set-tags "${{ needs.set-tag.outputs.ready_tag_name }}=${revision},${{ needs.set-tag.outputs.tag_name }}=${revision}${protected_revision_tags}"
          done
