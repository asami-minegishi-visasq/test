name: Deployment
on:
  push:
    branches:
      - main
      - staging

env:
  VERSION: v1

jobs:
  set-tag:
    runs-on: ubuntu-latest
    outputs:
      id: set_tag
      settable: ${{ steps.set_tag.outputs.settable }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set environment for branch and tag
        id: set_tag
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
              revision_base="release"
          elif [[ $GITHUB_REF == 'refs/heads/staging' ]]; then
              revision_base="staging"
          else
              echo "Unsupported branch. Exiting..."
              exit 1
          fi
          
          latest_tag=$(git tag -l --sort=version:refname "${revision_base}-${VERSION}*" | tail -n 1)
          echo "latest_tag=${latest_tag}" >> $GITHUB_ENV
          
          release_number=$(echo $latest_tag | sed "s/${revision_base}-${VERSION}-//" | awk '{print $0+1}')
          echo "release_number=${release_number}" >> $GITHUB_ENV
          
          echo "settable=1" >> $GITHUB_ENV

  create-and-push-tag:
    needs: set-tag
    runs-on: ubuntu-latest
    if: needs.set-tag.outputs.settable == '1'
    steps:
      - name: Create and Push New Tag
        run: |
          tag_name="${{ env.revision_base }}-${{ env.VERSION }}-${{ env.release_number }}"
          git tag $tag_name
          git push origin $tag_name

        
          
  switch-traffic:
    needs: set-tag
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: deploy
        run: |
          echo ${{ needs.set-tag.outputs.revision_base }}
          echo ${{ needs.set-tag.outputs.release_number }}
          
  cleanup-revision-tags:
    needs: switch-traffic
    runs-on: ubuntu-latest
    steps:
      - name: Sleep for 3 minutes
        run: sleep 180s
      - name: check
        run: echo 'check...'
