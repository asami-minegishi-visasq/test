name: pr-env-deploy-on-comment
on:
  workflow_call:
    inputs:
      service_name: 
        type: string
        required: true
      app_version: 
        type: string
        required: true

env:
  SERVICE_ACCOUNT: 'cloud-run-test'
  IDENTITY_POOL_NAME: 'cloud-run-test'
  IDENTITY_PROVIDER_NAME: 'github'
  REGION: 'us-central1'
  # 以下は環境ごとに出し分ける予定
  environment: 'stg'
  project_id: '400301755221'
  project_name: 'private-asami-minegishi-01'
  revision_base: 'staging'
  slack_channel: 'C0185CQ1Q3S'

jobs:
  # PRコメント時にfeatureブランチをステージング環境にデプロイする
  set-tag:
    runs-on: ubuntu-latest
    outputs:
      release_number: ${{ steps.get_tag.outputs.release_number }}
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/pr_deploy')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: refs/pull/${{ github.event.issue.number }}/head

      - name: Get Tag List
        id: get_tag
        run: |
          latest_tag=$(git tag -l --sort=version:refname "${{ env.revision_base }}-${{ inputs.app_version }}*" | tail -n 1)
          release_number=$(echo $latest_tag | sed "s/${{ env.revision_base }}-${{ inputs.app_version }}-//" | awk '{print $0+1}')
          echo "release_number=${release_number}" >> $GITHUB_OUTPUT
          
      - name: Create and Push New Tag
        id: set_tag
        run: |
          tag_name="${{ env.revision_base }}-${{ inputs.app_version }}-${{ steps.get_tag.outputs.release_number }}"
          git tag $tag_name
          git push origin $tag_name

  set-revision-tag:
    needs:
      - set-tag
    runs-on: ubuntu-latest
    environment:
      name: ${{ env.environment }}
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/${{ env.project_id }}/locations/global/workloadIdentityPools/${{ env.IDENTITY_POOL_NAME }}/providers/${{ env.IDENTITY_PROVIDER_NAME }}"
          service_account: "${{ env.SERVICE_ACCOUNT }}@${{ env.project_name }}.iam.gserviceaccount.com"
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Set Revision tag and Image protected tag
        run: |
          services=$(gcloud run services list --region=${{ env.REGION }} --format="value(name)" --filter="metadata.name:${{ inputs.service_name }}*")
          for service in $services; do
            echo $service
            # デプロイしたリビジョンにPRベースのタグを付与する
            revision="${service}-${{ env.revision_base }}-${{ inputs.app_version }}-${{ needs.set-tag.outputs.release_number }}"
            gcloud run services update-traffic "$service" --region=${{ env.REGION }} --update-tags "pullrequest-${{ github.event.issue.number }}=${revision}"
            # リビジョンのイメージに保護用のタグを付与する
            image_url=$(gcloud run services describe "${service}" --region=${{ env.REGION }} --format="value(image)" | sed 's|gcr.io/${{ needs.set-tag.outputs.project_name }}|us-docker.pkg.dev/${{ needs.set-tag.outputs.project_name }}/gcr.io|g')
            tag_name="protected-${{ github.event.issue.number }}-${{ needs.set-tag.outputs.release_number }}"
            gcloud artifacts docker tags add "${image_url}" "${image_url%@*}:${tag_name}"
          done

  # PRがクローズされた時に専用環境があれば削除する
  delete_protected_tags_when_pr_closed:
    if: |
      github.event_name == 'pull_request' && github.event.action == 'closed' ||
      github.event.issue.pull_request && contains(github.event.comment.body, '/pr_destroy') ||
      github.event.issue.pull_request && contains(github.event.comment.body, '/pr_delete')
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/${{ env.project_id }}/locations/global/workloadIdentityPools/${{ env.IDENTITY_POOL_NAME }}/providers/${{ env.IDENTITY_PROVIDER_NAME }}"
          service_account: "${{ env.SERVICE_ACCOUNT }}@${{ env.project_name }}.iam.gserviceaccount.com"
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Remove Revision tag and Image protected tag
        run: |
          services=$(gcloud run services list --region=${{ env.REGION }} --format="value(name)" --filter="metadata.name:${{ inputs.service_name }}*")
          for service in $services; do
            # PRベースのリビジョンタグを削除する
            gcloud run services update-traffic "$service" --region=${{ env.REGION }} --remove-tags "pr-${{ github.event.pull_request.number || github.event.issue.number }}"
            # PRベースのイメージ保護用タグを削除する
            image_url=$(gcloud run services describe "${service}" --region=${{ env.REGION }} --format="value(image)" | sed 's|gcr.io/${{ needs.set-tag.outputs.project_name }}|us-docker.pkg.dev/${{ needs.set-tag.outputs.project_name }}/gcr.io|g')
            protected_tags=$(gcloud artifacts docker tags list "${image_url%@*}" --format="value(tag)"  --filter="tag~/tags/protected-${{ github.event.pull_request.number || github.event.issue.number }}-*")
            for tag in ${protected_tags}; do
              gcloud artifacts docker tags delete "${image_url%@*}:${tag}"
            done
          done
